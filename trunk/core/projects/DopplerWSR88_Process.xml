<?xml version="1.0" encoding="UTF-8"?>
<sml:SensorML xmlns:sml="http://www.opengis.net/sensorML" xmlns:swe="http://www.opengis.net/swe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/sensorML http://vast.uah.edu/schemas/sensorML/1.0.30/base/sensorML.xsd" version="1.0">
   <sml:ProcessChain id="DOPPLER_PROCESS">
      <sml:inputs>
         <sml:InputList>
            <sml:input name="time">
               <swe:DataGroup id="TIME_RANGE_DEF">
                  <swe:component name="start">
                     <swe:Time definition="urn:ogc:def:phenomenon:time" referenceTimeFrame="urn:ogc:def:crs:julianTime" uom="s"/>
                  </swe:component>
                  <swe:component name="stop">
                     <swe:Time definition="urn:ogc:def:phenomenon:time" referenceTimeFrame="urn:ogc:def:crs:julianTime" uom="s"/>
                  </swe:component>
                  <swe:component name="step">
                     <swe:Quantity definition="urn:ogc:def:phenomenon:duration" uom="s"/>
                  </swe:component>
               </swe:DataGroup>
            </sml:input>
         </sml:InputList>
      </sml:inputs>
      <sml:outputs>
         <sml:OutputList>
            <sml:output name="imageData">
               <swe:DataGroup id="OUTPUT_IMAGE">
                  <swe:component name="numBins">
                     <swe:Count id="BIN_COUNT"/>
                  </swe:component>
                  <swe:component name="radial">
                     <swe:DataArray arraySize="#BIN_COUNT">
                        <swe:component name="data">
                           <swe:Count min="0" max="255"/>
                        </swe:component>
                     </swe:DataArray>
                  </swe:component>
               </swe:DataGroup>                           
            </sml:output>
            <sml:output name="gridData" xlink:href="#GRID_DATA"/>
         </sml:OutputList>
      </sml:outputs>
      <sml:processes>
         <sml:ProcessList>
            <!-- Main SOS request -->
            <sml:process name="sos">
               <sml:ProcessModel>
                  <sml:inputs>
                     <sml:InputList>
                        <sml:input name="time" xlink:href="#TIME_RANGE_DEF"/>
                     </sml:InputList>
                  </sml:inputs>
                  <sml:outputs>
                     <sml:OutputList>
                        <sml:output name="observationInfo">
                           <swe:DataGroup>
                              <swe:component name="name">
                                 <swe:Category/>
                              </swe:component>
                              <swe:component name="procedure">
                                 <swe:Category/>
                              </swe:component>
                              <swe:component name="location">
                                 <swe:Vector id="OBS_LOC" referenceFrame="urn:ogc:def:crs:EPSG:6.1:4329">
                                    <swe:coordinate name="lat">
                                       <swe:Quantity uom="deg"/>
                                    </swe:coordinate>
                                    <swe:coordinate name="lon">
                                       <swe:Quantity uom="deg"/>
                                    </swe:coordinate>
                                    <swe:coordinate name="alt">
                                       <swe:Quantity uom="m"/>
                                    </swe:coordinate>
                                 </swe:Vector>
                              </swe:component>
                           </swe:DataGroup>
                        </sml:output>
                        <sml:output name="observationData">
                           <swe:DataGroup>
                              <swe:component name="time">
                                 <swe:Time id="OBS_TIME" definition="urn:ogc:phenomenon:time" referenceTime="1970-01-01T00:00:00Z" uom="urn:ogc:unit:second"/>
                              </swe:component>
                              <swe:component name="elevation">
                                 <swe:Quantity id="OBS_ELEV" definition="urn:ogc:phenomenon:elevation" uom="urn:ogc:unit:degree"/>
                              </swe:component>
                              <swe:component name="azimuth">
                                 <swe:Quantity id="OBS_AZIM" definition="urn:ogc:phenomenon:azimuth" uom="urn:ogc:unit:degree"/>
                              </swe:component>
                              <swe:component name="numBins">
                                 <swe:Count id="NUM_BINS"/>
                              </swe:component>
                              <swe:component name="data">
                                 <swe:DataArray arraySize="#NUM_BINS">
                                    <swe:component name="reflectivity">
                                       <swe:Quantity definition="urn:ogc:phenomenon:returnedPower" uom="urn:ogc:unit:dbZ"/>
                                    </swe:component>
                                 </swe:DataArray>
                              </swe:component>
                           </swe:DataGroup>
                        </sml:output>
                     </sml:OutputList>
                  </sml:outputs>
                  <sml:parameters>
                     <sml:ParameterList>
                        <sml:parameter name="sosOptions">
                           <swe:DataGroup fixed="true">
                              <swe:component name="endPoint">
                                 <swe:Category definition="urn:ogc:def:identifier:URL">http://vast.uah.edu:8080/ows-dev/dopplerSos</swe:Category>
                              </swe:component>
                              <swe:component name="requestMethod">
                                 <swe:Category definition="urn:ogc:def:identifier:URL">GET</swe:Category>
                              </swe:component>
                              <swe:component name="version">
                                 <swe:Category definition="urn:ogc:def:identifier:version">1.0</swe:Category>
                              </swe:component>
                              <swe:component name="offering">
                                 <swe:Category>KOKX_DOPPLER_TILT0</swe:Category>
                              </swe:component>
                              <swe:component name="observables">
                                 <swe:Category>REFLECTIVITY</swe:Category>
                              </swe:component>
                              <swe:component name="format">
                                 <swe:Category definition="urn:ogc:def:identifier:mimeType">application/com-binary-base64</swe:Category>
                              </swe:component>                              
                           </swe:DataGroup>
                        </sml:parameter>
                     </sml:ParameterList>
                  </sml:parameters>
                  <sml:method xlink:href="urn:ogc:def:process:SOS:1.0"/>
               </sml:ProcessModel>
            </sml:process>
            <!-- FOR loop for bins -->
            <sml:process name="binCounter">
               <sml:ProcessModel>
                  <sml:inputs>
                     <sml:InputList>
                        <sml:input name="pass-through">
                           <swe:DataGroup>
                              <swe:component name="location" xlink:href="#OBS_TIME"/>
                              <swe:component name="elevation" xlink:href="#OBS_ELEV"/>
                              <swe:component name="azimuth" xlink:href="#OBS_AZIM"/>                              
                           </swe:DataGroup>
                        </sml:input>
                        <sml:input name="countingRange">
                           <swe:DataGroup>
                              <swe:component name="start">
                                 <swe:Quantity>0</swe:Quantity>
                              </swe:component>
                              <swe:component name="stop">
                                 <swe:Quantity/>
                              </swe:component>
                              <swe:component name="stepSize">
                                 <swe:Quantity>4</swe:Quantity>
                              </swe:component>
                           </swe:DataGroup>
                        </sml:input>                        
                     </sml:InputList>
                  </sml:inputs>
                  <sml:outputs>
                     <sml:OutputList>
                        <sml:output name="pass-through">
                           <swe:DataGroup>
                              <swe:component name="location" xlink:href="#OBS_TIME"/>
                              <swe:component name="elevation" xlink:href="#OBS_ELEV"/>
                              <swe:component name="azimuth" xlink:href="#OBS_AZIM"/>
                           </swe:DataGroup>
                        </sml:output>
                        <sml:output name="count">
                           <swe:DataGroup>
                              <swe:component name="variable">
                                 <swe:Quantity/>
                              </swe:component>
                              <swe:component name="index">
                                 <swe:Count/>
                              </swe:component>
                           </swe:DataGroup>
                        </sml:output>
                        <sml:output name="stepCount">
                           <swe:Count/>
                        </sml:output>
                     </sml:OutputList>
                  </sml:outputs>
                  <sml:method xlink:href="urn:ogc:def:process:counter:1.0"/>
               </sml:ProcessModel>
            </sml:process>
            <!-- Actual chain doing the geolocation job -->
            <sml:process name="binLocationChain" xlink:href="./Doppler_Geolocation.xml#DOPPLER_GEOLOCATION_CHAIN"/>
            <!-- Grid Array Builder -->
            <sml:process name="arrayBuilder">
               <sml:ProcessModel>
                  <sml:inputs>
                     <sml:InputList>
                        <sml:input name="arraySize">
                           <swe:Count/>
                        </sml:input>
                        <sml:input name="arrayComponent">
                           <swe:DataGroup>
                              <swe:component name="index">
                                 <swe:Count/>
                              </swe:component>
                              <swe:component name="data" xlink:href="./Doppler_Geolocation.xml#LOCATION_DATA"/>
                           </swe:DataGroup>
                        </sml:input>
                     </sml:InputList>
                  </sml:inputs>
                  <sml:outputs>
                     <sml:OutputList>
                        <sml:output name="arrayData">
                           <swe:DataGroup id="GRID_DATA">
                              <swe:component name="size">
                                 <swe:Count id="ARRAY_SIZE"/>
                              </swe:component>                  
                              <swe:component name="array">
                                 <swe:DataArray arraySize="#ARRAY_SIZE">
                                    <swe:component name="point" xlink:href="./Doppler_Geolocation.xml#LOCATION_DATA"/>
                                 </swe:DataArray>
                              </swe:component>
                           </swe:DataGroup> 
                        </sml:output>
                     </sml:OutputList>
                  </sml:outputs>
                  <sml:method xlink:href="urn:ogc:def:process:arrayBuilder:1.0"/>
               </sml:ProcessModel>
            </sml:process>
         </sml:ProcessList>
      </sml:processes>
      <sml:connections>
         <sml:ConnectionList>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="this/inputs/time"/>
                  <sml:destination ref="sos/inputs/time"/>
               </sml:Link>
            </sml:connection>
            <!-- binCounter inputs -->
            <sml:connection>
               <sml:Link>
                  <sml:source ref="sos/outputs/observationData/numBins"/>
                  <sml:destination ref="binCounter/inputs/countingRange/stop"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="sos/outputs/observationInfo/location"/>
                  <sml:destination ref="binCounter/inputs/pass-through/location"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="sos/outputs/observationData/elevation"/>
                  <sml:destination ref="binCounter/inputs/pass-through/elevation"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="sos/outputs/observationData/azimuth"/>
                  <sml:destination ref="binCounter/inputs/pass-through/azimuth"/>
               </sml:Link>
            </sml:connection>
            <!-- binLocationChain inputs -->
            <sml:connection>
               <sml:Link>
                  <sml:source ref="binCounter/outputs/pass-through/location"/>
                  <sml:destination ref="binLocationChain/inputs/radarLocation"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="binCounter/outputs/pass-through/elevation"/>
                  <sml:destination ref="binLocationChain/inputs/elevation"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="binCounter/outputs/pass-through/azimuth"/>
                  <sml:destination ref="binLocationChain/inputs/azimuth"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="binCounter/outputs/count/variable"/>
                  <sml:destination ref="binLocationChain/inputs/binIndex"/>
               </sml:Link>
            </sml:connection>
            <!-- arrayBuilder inputs -->
            <sml:connection>
               <sml:Link>
                  <sml:source ref="binCounter/outputs/stepCount"/>
                  <sml:destination ref="arrayBuilder/inputs/arraySize"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="binCounter/outputs/count/index"/>
                  <sml:destination ref="arrayBuilder/inputs/arrayComponent/index"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="binLocationChain/outputs/geoLocation"/>
                  <sml:destination ref="arrayBuilder/inputs/arrayComponent/data"/>
               </sml:Link>
            </sml:connection>
            <!-- imageData output -->
            <sml:connection>
               <sml:Link>
                  <sml:source ref="sos/outputs/observationData/numBins"/>
                  <sml:destination ref="this/outputs/imageData/numBins"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="sos/outputs/observationData/data"/>
                  <sml:destination ref="this/outputs/imageData/radial"/>
               </sml:Link>
            </sml:connection>
            <!-- gridData output -->
            <sml:connection>
               <sml:Link>
                  <sml:source ref="arrayBuilder/outputs/arrayData"/>
                  <sml:destination ref="this/outputs/gridData"/>
               </sml:Link>
            </sml:connection>
         </sml:ConnectionList>
      </sml:connections>
   </sml:ProcessChain>
</sml:SensorML>
